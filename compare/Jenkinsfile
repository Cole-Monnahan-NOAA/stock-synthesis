pipeline {
    agent { dockerfile {
          dir 'jenkins/stock-synthesis/compare'
        }
    }
    stages { 
	    stage('Prepare workspace') {
            steps {
			  sh label: 'print wd', script: 'pwd'
			  sh label: 'view files', script: 'ls .'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf Simple'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf simple_run'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf ss_example_files'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf run_R'
			  sh label: 'remove an old file (force in case does not exist)', script: 'rm -f Simple.zip'
			  sh label: 'verify removed', script: 'ls .'
		   }
        }
        stage('Copy Simple.zip artifact from previous stage') {
            steps {
			  sh label: 'create subfolder to save artifact', script: 'mkdir simple_run'
              copyArtifacts filter: 'Simple.zip', fingerprintArtifacts: true, projectName: 'stock-synthesis-model', selector: lastSuccessful()
			  sh label: 'view files', script: 'ls .'
              sh label: 'move Simple.zip', script: 'mv Simple.zip simple_run/Simple.zip' 
			  sh label: 'verify move', script: 'cd simple_run && ls .'
			  sh label: 'Unzip Simple.zip', script: 'cd simple_run && unzip Simple.zip'
			  sh label: 'view files', script: 'ls .'
		   }
        }
        stage('Git clone src for stock synthesis reference run files') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: '1aa2d7c8-749f-4270-9de2-6ffcf0cd2beb', url: 'https://stock_synthesis.build@vlab.ncep.noaa.gov/git/ss_examples']]])
			    sh label: 'view files', script: 'ls .'
				sh label: 'create subfolder to move repo files', script: 'mkdir ss_example_files'
				sh label: 'move the repo Simple files', script: 'mv Simple ss_example_files'
				sh label: 'view files', script: 'ls .'
				sh label: 'view files', script: 'cd ss_example_files && ls -R .'
			}
        }
		stage('setup folders for running R') {
            steps {
			    sh label: 'make an R directory', script: 'mkdir run_R'
				sh label: 'move the ref file', script: 'mv ss_example_files/Simple/ss_summary.sso run_R/ss_summary_ref.sso'
				sh label: 'move the artifact file', script: 'mv simple_run/Simple run_R'
				sh label: 'view files', script: 'ls -R run_R'
			}
        }
	    stage('Run R code to test R') {
		    steps{
			    sh label: 'test R code', script: 'R -e "test <- 2+2; print(test)"'
			}	
		}
	    stage('Run test R script') {
		    steps{
			    sh label: 'test R code', script: 'Rscript run_compare.R'
			}	
		}
		stage('archive') {
            steps {
                archiveArtifacts 'run_R/compare_test.txt'
            }
        }
	}
    post {
        failure {
            mail bcc: '', body: 'Stock Synthesis build failed.', cc: '', from: '', replyTo: '', subject: 'Jenkins Build Failure: stock-synthesis-compare', to: 'kathryn.doering@noaa.gov '
        }
        changed {
            script {
                if (currentBuild.currentResult == 'SUCCESS') { // Other values: SUCCESS, UNSTABLE
                    // Send an email only if the build status has changed from red to green
                   mail bcc: '', body: 'Stock Synthesis build now passing!', cc: '', from: '', replyTo: '', subject: 'Jenkins Build Passing Again: stock-synthesis-compare', to: 'kathryn.doering@noaa.gov'
                }
            }
        }
    }
}