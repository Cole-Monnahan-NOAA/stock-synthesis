pipeline {
    agent { dockerfile {
          dir 'jenkins'
          args '-u 0:0'
        }
    }
    stages {
        stage('Build SS Executable') {
            steps {
			    sh label: 'Double check source', script: 'ls .'
				sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf SS330'
				sh label: 'Make SS330 folder', script: 'mkdir SS330'																								   														   
                sh label: 'Run build', script: '/bin/bash ./Make_SS_330_new.sh -b SS330 -a /usr/local/admb-12.2/admb'
                sh label: 'Validate build', script: 'cp SS330/ss . && sha256sum ss'
                sh label: 'Archive ss executable', script: 'rm -f ss.gz && gzip -v ss'
            }
        }
        stage('Archive artifact') {
            steps {
              archiveArtifacts 'ss.gz'
            }
        }
    }
	post {
		failure {
			mail bcc: '', body: 'The job Stock-Synthesis-build failed.', cc: '', from: '', replyTo: '', subject: 'stock-synthesis-build: Jenkins Build Failure', to: 'kathryn.doering@noaa.gov'
		}
		changed {
			script {
				if (currentBuild.currentResult == 'SUCCESS') { // Other values: SUCCESS, UNSTABLE
					// Send an email only if the build status has changed from failure to success
				   mail bcc: '', body: 'The job Stock-Synthesis-build is now passing.', cc: '', from: '', replyTo: '', subject: 'stock-synthesis-build: Jenkins Build Passing Again', to: 'kathryn.doering@noaa.gov'
				}
			}
		}
    }
}