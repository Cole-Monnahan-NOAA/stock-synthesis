pipeline {
    agent { dockerfile {
          dir 'jenkins/ssnew'
        }
    }
    stages { 
	    stage('Prepare workspace') {
            steps {
			  sh label: 'remove an old file (force in case does not exist)', script: 'rm -f models.zip'
			  sh label: 'remove an old dir (force in case does not exist)', script: 'rm -rf run_R'
		   }
        }
        stage('Copy models.zip artifact from previous stage') {
            steps {
			  sh label: 'create subfolder to save artifact', script: 'mkdir run_R'
              copyArtifacts filter: 'models.zip', fingerprintArtifacts: true, projectName: 'stock-synthesis-model', selector: lastSuccessful()
              sh label: 'move models.zip', script: 'mv models.zip run_R/models.zip' 
			  sh label: 'Unzip models.zip', script: 'cd run_R && unzip models.zip'
		   }
        }
        stage('Copy and unpack ss.gz artifact from previous stage') {
            steps {
              copyArtifacts filter: 'ss.gz', fingerprintArtifacts: true, projectName: 'stock-synthesis-build', selector: lastSuccessful()
			  sh label: 'Unzip ss', script: 'gunzip ss.gz'
              sh label: 'Make ss executable', script: 'chmod a+rwx ss'
			  sh label: 'Move ss executable', script: 'mv ss run_R/model_runs/ss'
			}
        }
	    stage('Run R code copy over model files, and run with .ss_new') {
		    steps{
		    	sh label: 'run script', script: 'Rscript ~/var/lib/jenkins/workspace/stock-synthesis-ssnew/jenkins/ssnew/run_ssnew.R'
			}
		}
	}
    post {
	    always {
		    sh label: 'Zip run_R folder', script: 'zip -r models_ssnew.zip run_R/model_runs'
		    archiveArtifacts 'models_ssnew.zip'
		}
    }
}